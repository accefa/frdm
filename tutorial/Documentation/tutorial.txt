=============================================================================
List of generated methods in project: main

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "AS1"       (component FRDM_KL25Z_UART)
   - AS1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value 
                then the device is also enabled(see the description of the Enable() method). In this case the Enable() method 
                is not necessary and needn't to be generated.
   - AS1_Deinit -Deinitializes the device. Switches off the device, frees the device data structure memory, interrupts vectors, 
                etc.
   - AS1_SendBlock -Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not 
                completed. Method <CancelBlockTransmission> can be used to cancel a transmit operation. This method is 
                available only if the transmitter property is enabled. This method finishes immediately after calling it - it 
                doesn't wait the end of data transmission. Use event <OnBlockSent> to check the end of data transmission or 
                method GetSentDataNum to check the state of sending.
   - AS1_ReceiveBlock -Specifies the number of data to receive. The method returns ERR_BUSY until the specified number of 
                characters is received. Method <CancelBlockReception> can be used to cancel a running receive operation. If a 
                receive operation is not in progress (the method was not called or a previous operation has already finished) 
                all received characters will be lost without any notification. To prevent the loss of data call the method 
                immediately after the last receive operation has finished (e.g. from the <OnBlockReceived> event). This method 
                finishes immediately after calling it - it doesn't wait the end of data reception. Use event <OnBlockReceived> 
                to check the end of data reception or method GetReceivedDataNum to check the state of receiving.
   - AS1_GetSentDataNum -Returns the number of sent characters.
   - AS1_GetReceivedDataNum -Returns the number of received characters in the receive buffer.
   - AS1_GetTxCompleteStatus -Returns whether the transmitter has transmitted all characters and there are no other characters 
                in the transmitter's HW FIFO or the shift register. The status flag is accumulated, after calling this method 
                the status is returned and cleared (set to "false" state). This method is available only if a peripheral 
                supports this feature.

Module "RxBuf"     (component RingBuffer)
   - RxBuf_Clear -Clear (empty) the ring buffer.
   - RxBuf_Put -Puts a new element into the buffer
   - RxBuf_Get -Removes an element from the buffer
   - RxBuf_NofElements -Returns the actual number of elements in the buffer.
   - RxBuf_NofFreeElements -Returns the actual number of free elements/space in the buffer.
   - RxBuf_Init -Initializes the data structure

Module "CS1"       (component CriticalSection)
   - CS1_CriticalVariable -Defines a variable if necessary. This is a macro.
   - CS1_EnterCritical -Enters a critical section
   - CS1_ExitCritical -Exits a critical section

Module "Cpu"       (component MKL25Z128LK4)

===================================================================================
